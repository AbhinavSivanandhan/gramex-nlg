# Generated by gramex init on 2019-01-14 by Jaidev Deshpande <deshpande.jaidev@gmail.com>. Please retain this line.

# Configurations for app: nlg
# ----------------------------------------------------------------------------
url:
  nlg-email-share:
    pattern: /$YAMLURL/share
    handler: FunctionHandler
    kwargs:
     function: web_app.share_to_email_account
  nlg-login-$*:
    pattern: /$YAMLURL/login
    handler: GoogleAuth
    kwargs:
      key: 927738177604-a056ijlrivc6l27tjjuscsq8d16s8mu0.apps.googleusercontent.com
      secret: RRSGD3qTUM4bMyqByEsi22Kn
      redirect:
        url: /$YAMLURL/
  nlg-data-selector-$*:
    pattern: /$YAMLURL/initform
    handler: FunctionHandler
    kwargs:
      headers:
        Cache-Control: no-store
        xsrf_cookies: false
      function: web_app.init_form
      redirect:
        url: /$YAMLURL/
  nlg-demo-selector-$*:
    pattern: /$YAMLURL/initdemo
    handler: FunctionHandler
    kwargs:
      headers:
        Cache-Control: no-store
        xsrf_cookies: false
      function: web_app.init_demo
      redirect:
        url: /$YAMLURL/demo
  nlg-demo-filehandler-$*:
    pattern: /$YAMLURL/demo
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/html/demo.html
      template: true
      auth:
        login_url: /$YAMLURL/login
  nlg-temporary-filehander-$*:
    pattern: /$YAMLURL/
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/index.html
      auth:
        login_url: /$YAMLURL/login
      transform:
        "index.html":
          function: template
          kwargs:
            nlg_base: ''
  nlg-config-filehandler-$*:
    pattern: /$YAMLURL/initconf
    handler: FunctionHandler
    kwargs:
      function: web_app.get_init_config
      headers:
        Content-Type: application/json
  nlg-static_files-$*:
    pattern: /$YAMLURL/nlg.js
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/js/nlg.js
  tablepreview-$*:
    pattern: /$YAMLURL/preview/(.*)/(.*)
    handler: FormHandler
    kwargs:
      url: $GRAMEXDATA/nlg/{_0}/{_1}
      headers:
        Cache-Control: no-store
  textproc-$*:
    pattern: /$YAMLURL/textproc
    handler: FunctionHandler
    kwargs:
      function: web_app.process_template
      xsrf_cookies: false
      headers:
        Content-Type: application/json
  rendertmpl-$*:
    pattern: /$YAMLURL/render-template
    handler: FunctionHandler
    kwargs:
      function: web_app.render_template
      xsrf_cookies: false
      headers:
        Content-Type: application/json
  nlg_gramopts-$*:
    pattern: /$YAMLURL/get-gramopts
    handler: FunctionHandler
    kwargs:
      function: web_app.get_gramopts
      xsrf_cookies: false
      headers:
        Content-Type: application/json
  save-config-$*:
    pattern: /$YAMLURL/save-config
    handler: FunctionHandler
    kwargs:
      function: web_app.save_config
      xsrf_cookies: false
  edit-narrative-$*:
    pattern: /$YAMLURL/edit-narrative
    handler: FunctionHandler
    kwargs:
      function: web_app.edit_narrative
      auth:
        login_url: /$YAMLURL/login
      redirect:
        query: next
        header: Referrer
        url: /$YAMLURL/index
  render-live-template-$*:
    pattern: /$YAMLURL/render-live-template
    handler: FunctionHandler
    kwargs:
      function: web_app.render_live_template
  share-demo-$*:
    pattern: /$YAMLURL/share-demo/(.*)/(.*)
    handler: FunctionHandler
    kwargs:
      function: web_app.share_demo
      auth:
        login_url: /$YAMLURL/login
      redirect:
        url: /$YAMLURL/demo

# Gramex init configurations for app: nlg
# ----------------------------------------------------------------------------
import:
  # To secure application for production,
  # replace 'YOUR-PROD-SERVER-NAME' with your production server host name.
  deploy if socket.gethostname() in {'YOUR-PROD-SERVER-NAME'}: $GRAMEXPATH/deploy.yaml
  # For alternate methods, see https://learn.gramener.com/guide/config/#conditions

  # /ui/ has Gramex UI components -- use this like the node_modules/ directory
  ui:
    path: $GRAMEXAPPS/ui/gramex.yaml
    YAMLURL: $YAMLURL/ui/

  # /admin/ as an admin page to manage users, get system info, etc.
handlers:
  BaseHandler:
    # Custom error pages for this application
    error:
      400: {path: $YAMLPATH/error/400.html}     # Bad request: e.g. URL argument missing
      401: {path: $YAMLPATH/error/401.html}     # Unauthorized: User not logged in
      403: {path: $YAMLPATH/error/403.html}     # Forbidden: user does not have access
      404: {path: $YAMLPATH/error/404.html}     # File not found
      500: {path: $YAMLPATH/error/500.html}     # Internal server error
