# Generated by gramex init on 2019-01-14 by Jaidev Deshpande <deshpande.jaidev@gmail.com>. Please retain this line.

# Configurations for app: nlg
# ----------------------------------------------------------------------------
watch:
    data-files:
        paths:
            - $YAMLPATH/app/gramupload/file.csv
        on_modified: webapp._watchfile_loader

url:
    nlg-login-$*:
        pattern: /$YAMLURL/login
        handler: GoogleAuth
        kwargs:
            key: 927738177604-a056ijlrivc6l27tjjuscsq8d16s8mu0.apps.googleusercontent.com
            secret: RRSGD3qTUM4bMyqByEsi22Kn
            redirect:
                query: next
                url: /$YAMLURL/
    nlg-data-selector-$*:
        pattern: /$YAMLURL/pickfile
        handler: FunctionHandler
        kwargs:
            headers:
                Cache-Control: no-store
            xsrf_cookies: false
            function: webapp.use_existing_file
            redirect:
                query: next
                header: Referrer
                url: /$YAMLURL/index
    nlg-landing-page-$*:
        pattern: /$YAMLURL/
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/app/grmform.html
            auth:
                login_url: /$YAMLURL/login
            transform:
                "grmform.html":
                    function: webapp.make_dataset_list
    nlg-uploadhandler-$*:
        pattern: /$YAMLURL/upload
        handler: UploadHandler
        kwargs:
            headers:
                Cache-Control: no-store
            path: $YAMLPATH/app/gramupload
            if_exists: overwrite
            xsrf_cookies: false
            redirect:
                query: next
                header: Referrer
                url: /$YAMLURL/index
            transform:
                function: webapp.copy_file_to_user_dir
    nlg-temporary-filehander-$*:
        pattern: /$YAMLURL/index
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/app/index.html
            auth:
                login_url: /$YAMLURL/login
    nlg-static_files-$*:
        pattern: /$YAMLURL/nlg.js
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/app/js/nlg.js
    tablepreview-$*:
        pattern: /$YAMLURL/preview
        handler: FormHandler
        kwargs:
            url: $YAMLPATH/app/gramupload/file.csv
            headers:
                Cache-Control: no-store
    textproc-$*:
        pattern: /$YAMLURL/textproc
        handler: FunctionHandler
        priority: 1000000
        kwargs:
            function: webapp.process_template
            xsrf_cookies: false
            headers:
                Content-Type: application/json
    rendertmpl-$*:
        pattern: /$YAMLURL/render-template
        handler: FunctionHandler
        kwargs:
            function: webapp.render_template
            xsrf_cookies: false
            headers:
                Content-Type: application/json
    nlg_gramopts-$*:
        pattern: /$YAMLURL/get-gramopts
        handler: FunctionHandler
        kwargs:
            function: webapp.get_gramopts
            xsrf_cookies: false
            headers:
                Content-Type: application/json
    tmpl-download-$*:
        pattern: /$YAMLURL/tmpl-download
        handler: FunctionHandler
        kwargs:
            function: webapp.download_template
            xsrf_cookies: false
            headers:
                Content-Type: application/octet-stream
                Content-Disposition: attachment; filename="template.py"
    save-config-$*:
        pattern: /$YAMLURL/save-config
        handler: FunctionHandler
        kwargs:
            function: webapp.save_config
            xsrf_cookies: false
    config-download-$*:
        pattern: /$YAMLURL/config-download
        handler: FunctionHandler
        kwargs:
            function: webapp.download_config
            xsrf_cookies: false
            headers:
                Content-Type: application/octet-stream
                Content-Disposition: attachment; filename="config.json"








# Gramex init configurations for app: nlg
# ----------------------------------------------------------------------------
import:
  # To secure application for production,
  # replace 'YOUR-PROD-SERVER-NAME' with your production server host name.
  deploy if socket.gethostname() in {'YOUR-PROD-SERVER-NAME'}: $GRAMEXPATH/deploy.yaml
  # For alternate methods, see https://learn.gramener.com/guide/config/#conditions

  # /ui/ has Gramex UI components -- use this like the node_modules/ directory
  ui:
    path: $GRAMEXAPPS/ui/gramex.yaml
    YAMLURL: $YAMLURL/ui/

  # /admin/ as an admin page to manage users, get system info, etc.
  admin:
    path: $GRAMEXAPPS/admin2/gramex.yaml    # Note the "admin2" instead of "admin"
    YAMLURL: /$YAMLURL/admin/               # URL to show the admin page at
    ADMIN_KWARGS:
      logo: https://gramener.com/uistatic/gramener.png
      title: Admin
      theme: '?primary=%2320186f&dark=%2320186f&font-family-base=roboto&body-bg=%23f8f8f8'
      # authhandler: name-of-DBAuth-handler    -- required for user management
    ADMIN_AUTH:
      membership:
        hd: gramener.com                    # Only @gramener.com Google Auth are admins


handlers:
  BaseHandler:
    # Custom error pages for this application
    error:
      400: {path: $YAMLPATH/error/400.html}     # Bad request: e.g. URL argument missing
      401: {path: $YAMLPATH/error/401.html}     # Unauthorized: User not logged in
      403: {path: $YAMLPATH/error/403.html}     # Forbidden: user does not have access
      404: {path: $YAMLPATH/error/404.html}     # File not found
      500: {path: $YAMLPATH/error/500.html}     # Internal server error
